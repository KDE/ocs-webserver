<?php
/**
 *  ocs-webserver
 *
 *  Copyright 2016 by pling GmbH.
 *
 *    This file is part of ocs-webserver.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU Affero General Public License as
 *    published by the Free Software Foundation, either version 3 of the
 *    License, or (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **/


$modelCategory = new Default_Model_ProjectCategory();
$this->categories = $modelCategory->fetchTreeForView();
$jsonTree = json_encode($this->categories);
$this->tab = 'payout-groupby-amount';
echo $this->render('statistics/headerTabs.phtml'); 


$modelData = new Statistics_Model_Data(Zend_Registry::get('config')->resources->toArray());
$products = $modelData->getPayoutgroupbyamountProduct();
$member = $modelData->getPayoutgroupbyamountMember();
?>
<h3>Statistics: Payout group by amount </h3>
<style type="text/css">
		.main-container{
			display: flex;
			max-height: 500px;
			float: left;
		}
		.main-container .container{
			width: 100%;
			list-style: none;
		}
		.main-container .container li{
			border-bottom: 1px solid #ccc;
		}
		.main-container .container span.tier{
			display: inline-block;
			width: 100px;
		}

</style>
<div id="linePayoutGroupbyAmountTab" class="tab-pane">  
<div class="main-container"> 
	<div>
		<h3> Products
		</h3>
		<ul class="container">
			
			<?php 
			echo '<li><span class="tier">$</span><span class="cnt"> # </li>';
			foreach ($products as $p) {
				echo '<li><span class="tier">'.$p['x'].'->'.($p['x']+10).'</span><span class="cnt">'.$p['y'].'</li>';
			} ?>
		</ul>
	</div>   
	<div>
		<h3> Members
		</h3>
		<ul class="container">
			<?php 
			
			echo '<li><span class="tier">$</span><span class="cnt"> # </li>';
			foreach ($member as $p) {
				echo '<li><span class="tier">'.$p['x'].'->'.($p['x']+10).'</span><span class="cnt">'.$p['y'].'</li>';
			} ?>
		</ul>
	</div>   
</div>

    <div id="linePayoutGroupbyAmount" class="chart-wrapper" style="max-width: 1000px; height: 100%; display: block; float: left; ">            
    </div>
    <div id="my_dataviz"></div>
</div>

<script type="text/javascript">
    $(document).ready(function () {             
         //$.getScript("/theme/flatui/js/stati/payoutGroupbyAmount.js");

			         

			// set the dimensions and margins of the graph
			var margin = {top: 10, right: 30, bottom: 30, left: 60},
			    width = 460 - margin.left - margin.right,
			    height = 400 - margin.top - margin.bottom;

			// append the svg object to the body of the page
			var svg = d3.select("#my_dataviz")
			  .append("svg")
			    .attr("width", width + margin.left + margin.right)
			    .attr("height", height + margin.top + margin.bottom)
			  .append("g")
			    .attr("transform",
			          "translate(" + margin.left + "," + margin.top + ")");

			//Read the data
			//d3.csv("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_IC.csv",function(data) {
			d3.json("/backend/index/getpayoutgroupbyamount", function(data) {

				//data = data.results;
				data = data.results; 
				data.shift();
				console.log(data);
			  // Add X axis --> it is a date format
			  var x = d3.scaleLinear()
			    .domain([1,400])
			    .range([ 0, width ]);
			  svg.append("g")
			    .attr("transform", "translate(0," + height + ")")
			    .call(d3.axisBottom(x));

			  // Add Y axis
			  var y = d3.scaleLinear()
			    .domain([0, 100])
			    .range([ height, 0 ]);
			  svg.append("g")
			    .call(d3.axisLeft(y));

			  // This allows to find the closest X index of the mouse:
			  var bisect = d3.bisector(function(d) { return d.x; }).left;

			  // Create the circle that travels along the curve of chart
			  var focus = svg
			    .append('g')
			    .append('circle')
			      .style("fill", "none")
			      .attr("stroke", "black")
			      .attr('r', 8.5)
			      .style("opacity", 0)

			  // Create the text that travels along the curve of chart
			  var focusText = svg
			    .append('g')
			    .append('text')
			      .style("opacity", 0)
			      .attr("text-anchor", "left")
			      .attr("alignment-baseline", "middle")

			  // Create a rect on top of the svg area: this rectangle recovers mouse position
			  svg
			    .append('rect')
			    .style("fill", "none")
			    .style("pointer-events", "all")
			    .attr('width', width)
			    .attr('height', height)
			    .on('mouseover', mouseover)
			    .on('mousemove', mousemove)
			    .on('mouseout', mouseout);

			  // Add the line
			  svg
			    .append("path")
			    .datum(data)
			    .attr("fill", "none")
			    .attr("stroke", "steelblue")
			    .attr("stroke-width", 1.5)
			    .attr("d", d3.line()
			      .x(function(d) { return x(d.x) })
			      .y(function(d) { return y(d.y) })
			      )


			  // What happens when the mouse move -> show the annotations at the right positions.
			  function mouseover() {
			    focus.style("opacity", 1)
			    focusText.style("opacity",1)
			  }

			  function mousemove() {
			    // recover coordinate we need
			    var x0 = x.invert(d3.mouse(this)[0]);
			    var i = bisect(data, x0, 1);
			    selectedData = data[i]
			    focus
			      .attr("cx", x(selectedData.x))
			      .attr("cy", y(selectedData.y))
			    focusText
			      .html("x:" + selectedData.x + "  -  " + "y:" + selectedData.y)
			      .attr("x", x(selectedData.x)+15)
			      .attr("y", y(selectedData.y))
			    }
			  function mouseout() {
			    focus.style("opacity", 0)
			    focusText.style("opacity", 0)
			  }

			})



    });    
</script>