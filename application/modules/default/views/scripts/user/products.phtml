<?php
/**
 *  ocs-webserver
 *
 *  Copyright 2016 by pling GmbH.
 *
 *    This file is part of ocs-webserver.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU Affero General Public License as
 *    published by the Free Software Foundation, either version 3 of the
 *    License, or (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **/

$this->headLink()->appendStylesheet('/theme/flatui/css/stylesheets/general.css');

$this->tab = 'products';
?>
<link href="/theme/flatui/css/chosen.css" media="screen" rel="stylesheet" type="text/css" />
<style type="text/css">
    div.datafiledroparea{
        overflow-y: scroll !important;
    }
</style>
<main class="user-admin-page">

    <?php echo $this->render('user/partials/userHeader_top.phtml'); ?>

    <section class="body-wrap">

        <section class="wrapper product-page">

            <!-- PAGE BODY -->

            <section class="my-products-page">

                <!-- NAVIGATION -->

                <?php echo $this->render('user/partials/userHeader.phtml'); ?>

                <!-- /NAVIGATION -->

                <div class="my-products-heading">
                    <h1 class="page-title left"><?= $this->translate('Products') ?></h1>

                    <div class="right light lightgrey num-products">
                        <span class="label label-default">
                            <?= $this->products->getTotalItemCount() ?> <?= $this->translate('products') ?>
                        </span>
                    </div>
                </div>

                <div class="my-products-list">
                    <div class="row">
                        <?php echo $this->partialLoop('user/partials/loopMyProducts.phtml', $this->products, $this->productFiles); ?>
                    </div>
                </div>

                <section style="text-align: center;">
                    <?php echo $this->paginationControl($this->products, 'Sliding', '/partials/paginationControlBootstrap.phtml',
                        array('dom_target' => 'section.my-products-page')); ?>
                </section>

            </section>

            <!-- /PAGE BODY -->

        </section>

    </section>

</main>

<script type="text/javascript">
    var myProducts = (function () {
        return {
            setup: function () {
                this.initBtnPublish();
            },

            initBtnPublish: function () {
                $('body').on('click', 'a[data-target]', function (event) {
                    event.preventDefault();
                    var url = this.href;
                    var target = $(this).attr("data-target");

                    $(target).empty().html('<img src="/images/system/ajax-loader.gif" style="display: inline;height: 20px; margin: 1px;"/>').load(url + ' ' + target + ' > *', function (response, status, xhr) {
                        if (status == "error") {
                            $(target).find('#error').html('Sorry, but there was an error. Please try again later.');
                            return;
                        } else {
                            return response;
                        }
                    });
                    return false;
                });
            }

        }
    })();
</script>
<?php
$this->inlineScript()->appendScript(
    '    $(document).ready(function(){
            myProducts.setup();
            Partials.setup();
        });
    ');
?>
<!-- updates -->
<div id="modal-updates"
     class="modal fade"
     role="dialog"
     aria-labelledby="modal-updates-label"
     data-product-id=""
     data-product-title="">
    <div class="modal-dialog content-modal" style="width: 95%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h3 id="modal-updates-label" data-updates-label=""><?= $this->translate('Changelog') ?></h3>
            </div>
            <div class="modal-body" style="font-size: small;">
                <div role="form" class="">
                    <input type="hidden" id="update-id" data-update-id="" value="">
                        <?php /**
                    <div class="form-group">
                      <label for="tile">Product Version:</label>
                      <input type="text" id="product-version" data-product-version="" class="form-control input-sm" placeholder="Product Version Number">
                    </div>
                         *
                         */?>
                    <div class="form-group">
                      <label for="tile">Changelog Title:</label>
                      <input type="text" id="update-title" data-update-title="" class="form-control input-sm" placeholder="Enter a Changelog Title">
                    </div>
                    <div class="form-group">
                      <label for="text">Changelog Text:</label>
                      <textarea id="update-text" data-update-text="" class="form-control input-sm" rows="3" placeholder="Enter a Changelog Text"></textarea>
                    </div>
                    <button class="btn btn-native pull-right btn-xs btn-file-action" data-updates-cancel-btn=""><?= $this->translate('Cancel') ?></button>
                    <button type="submit" class="btn btn-native pull-right btn-xs btn-file-action" data-add-update-btn="">Save</button>
                </div>

                <article id="update-list">
                </article>


            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}}

        $('button[rel="tooltip"]').tooltip();

        var $modalPpload = $('#modal-updates');

        $('a[href="#modal-updates"]').on('click', function (event) {
            event.preventDefault();
            $modalPpload.attr('data-product-id', $(this).attr('data-product-id'));
            $modalPpload.attr('data-product-title', $(this).attr('data-product-title'));

            $modalPpload.find('h3[data-ppload-label]').html('Changelog for ' + $modalPpload.attr('data-product-tile'));

            $modalPpload.find('#update-list').html('');

            if ($modalPpload.attr('data-product-id')) {
                getUpdates();
            }

        });


        function getUpdates(page) {
            $modalPpload.find('#update-list').html('');

            var productId = $modalPpload.attr('data-product-id');
            $.ajax({
                url: '/p/'+productId+'/getupdatesajax/',
                type: 'GET',
                data: {
                    format: 'json',
                    ignore_status_code: 1
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        return;
                    }
                    $modalPpload.find('#update-list').append('<br/><br/><br/>');

                    $.each(data.updates, function () {
                        var id = '';
                        if (this.project_update_id) {
                            id = this.project_update_id;
                        }
                        var title = '';
                        if (this.title) {
                            title = this.title;
                        }
                        var text = '';
                        if (this.text) {
                            text = this.text;
                        }
                        var date = '';
                        if (this.created_at) {
                            date = this.created_at;
                        }


                        var divEl = $('<div />');
                        divEl.attr('data-uptdate-id', id);
                        divEl.append(
                                 '<a name="anker_'+id+'"></a>'
                                + '<h4>'+title+'</h4>'
                                + '<div class="small light lightgrey product-update-date">'+date+ '</div>'
                                + text + '<br/><br/>'
                            );

                        var btnEdit = $('<button type="submit" class="btn btn-native btn-sm">Edit</button>');
                        btnEdit.attr('data-change-update-btn',id);
                        btnEdit.attr('data-change-title',title);
                        btnEdit.attr('data-change-text',text);


                        var btnDelete = $('<button type="submit" class="btn btn-native btn-sm">Delete</button>');
                        btnDelete.attr('data-delete-update-btn',id);

                        divEl.append(btnEdit);
                        divEl.append('&nbsp;&nbsp;');
                        divEl.append(btnDelete);
                        divEl.append('<br/><br/><br/><br/>');

                        $modalPpload.find('#update-list').append(divEl);

                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        }

        $modalPpload.on('click', 'button[data-add-update-btn]', function (event) {
            //var product_version = $modalPpload.find('#product-version').val();
            var update_id = $modalPpload.find('#update-id').val();
            var title = $modalPpload.find('#update-title').val();
            var text = $modalPpload.find('#update-text').val();
            var productId = $modalPpload.attr('data-product-id');
            event.preventDefault();

            $.ajax({
                url: '/p/'+productId+'/saveupdateajax',
                type: 'POST',
                data: {title: title, text: text, update_id: update_id/*, product_version: product_version*/},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        return;
                    }
                    //$modalPpload.find('#product-version').val('');
                    $modalPpload.find('#update-title').val('');
                    $modalPpload.find('#update-text').val('');
                    $modalPpload.find('#update-id').val('');

                    //if(update_id) {
                        getUpdates();
                    //} else {
                    //  $modalPpload.modal('hide');
                    //  location.reload();
                    //}
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        });


        $modalPpload.on('click', 'button[data-delete-update-btn]', function (event) {
            var updateId = $(this).attr('data-delete-update-btn');
            var productId = $modalPpload.attr('data-product-id');
                event.preventDefault();

            $.ajax({
                url: '/p/'+productId+'/deleteupdateajax',
                type: 'POST',
                data: {update_id: updateId},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        alert('Update could not be deleted!');
                        return;
                    }
                    getUpdates();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        });

        $modalPpload.on('click', 'button[data-change-update-btn]', function (event) {
            var updateId = $(this).attr('data-change-update-btn');
            var title = $(this).attr('data-change-title');
            var text = $(this).attr('data-change-text');

                $modalPpload.find('#update-title').val(title);
            $modalPpload.find('#update-text').val(text);
            $modalPpload.find('#update-id').val(updateId);

            $modalPpload.find('#update-title').focus();

                event.preventDefault();

        });

        $modalPpload.on('click', 'button[data-updates-cancel-btn]', function (event) {
            event.preventDefault();
            $modalPpload.modal('hide');
        });

    });

</script>

<!-- ppload -->

<div id="modal-ppload"
     class="modal fade"
     role="dialog"
     aria-labelledby="modal-ppload-label"
     data-ppload-api-uri="<?= PPLOAD_API_URI ?>"
     data-ppload-collection-id=""
     data-product-version=""
     data-product-id=""
     data-product-tile=""
     data-addpploadfile-uri=""
     data-updatepploadfile-uri=""
     data-updatepackagetype-uri=""
     data-deletepploadfile-uri=""
     data-deletepploadfiles-uri="">
    <div class="modal-dialog content-modal" style="width: 95%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h3 id="modal-ppload-label" data-ppload-label=""><?= $this->translate('Files') ?></h3>
            </div>
            <div class="modal-body">
                <input type="file" style="display: none;" data-file-upload="" multiple>

                <p data-file-upload-msg=""><?= $this->translate('Drop file(s) here') ?>:</p>

                <div data-file-upload="" dropzone style="font-size: small; " class="datafiledroparea">
                    <table class="table" data-ppload-files="">
                        <thead>
                        <tr>
                            <th><?= $this->translate('Filename') ?></th>
                            <th><?= $this->translate('Version') ?></th>
                            <th><?= $this->translate('Description') ?></th>
                          
                            <th><?= $this->translate('License') ?></th>
                            <th><?= $this->translate('Filetype') ?></th>
                            <th><?= $this->translate('Packagetype') ?></th>
                            <th><?= $this->translate('Date added') ?></th>
                            <th style="text-align: right"><?= $this->translate('Filesize') ?></th>
                            <th style="text-align: right"><?= $this->translate('# of Downloads') ?></th>

                            <th></th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <table class="table" data-file-upload="">
                        <tbody></tbody>
                    </table>
                </div>


                <div style="float: right; padding-top: 10px;" class="small light">
                    Deleted files are no longer publicly accessible but number of downloads still kept. *
                </div>
            </div>

            <div class="modal-footer" style="margin-top: 20px;">
                <span class="pull-left">
                    <input type="checkbox" data-accept-checkbox="">
                    <?= $this->translate('I accept the ') ?>
                    <a href="/content/terms"><?= $this->translate('Terms and Conditions') ?></a>
                </span>

            </div>
            <div class="modal-footer">
                <button class="btn btn-native pull-left" data-addpploadfile-btn="">
                    <?= $this->translate('Add File(s)') ?>
                </button>
                <button class="btn btn-danger pull-left" data-file-upload-cancel-btn="">
                    <?= $this->translate('Cancel Upload') ?>
                </button>
                <button id="github_picker" class="btn btn-native pull-left" data-toggle="" data-target="#generic-dialog" data-username="<?=$this->member->link_github?>" title="add an URL here">
                    <?= $this->translate('Add URL') ?>
                </button>
                <button class="btn btn-native pull-right" data-ppload-cancel-btn=""><?= $this->translate('Close') ?></button>
            </div>
            <div class="modal-footer">

            </div>
       </div>
   </div>
</div>

<script type="text/javascript">

    $(function () {

        $('body').on("click", "#github_picker", function (event) {

            html = '<form id="get-url-form">' +
                '<div class="form-group">' +
                '<input type="url" class="form-control" id="get-url" placeholder="Enter a URL where the files can be downloaded" required="required" />' +
                '<span id="get-url-help" class="help-block small">e.g. https://github.com/mongodb/mongo/archive/r3.5.2.tar.gz</span></div>' +
                '<button type="submit" class="btn btn-native btn-sm" id="get-url-submit">Submit</button>' +
                '</form>';

            var msgBox = $('#generic-dialog');
            msgBox.modal('hide');
            msgBox.find('.modal-header-text').empty().append('Enter a download URL:');
            msgBox.find('.modal-body').empty().append(html);
            setTimeout(function () {
                msgBox.modal('show');
            }, 900);

        });

        $('body').on('submit', '#get-url-form', function(event) {
            if (! $('#get-url-form').validate()) {
                return true;
            }
            event.preventDefault();
            $.ajax({
                url: '/file/link/',
                type: 'post',
                data: {
                    project_id: $('#modal-ppload').attr('data-product-id'),
                    u: $('#get-url').val()
                },
                success: function(returned_data) {
                    if (!returned_data.file) {
                        $('#get-url').addClass('hasError').focus();
                        $('#get-url-help').html('An Error occurred. Please check your URL or try again later.');
                        return;
                    }
                    data_file = returned_data.file;
                    $modalPpload.attr('data-ppload-collection-id', data_file.collection_id);
                    $('#get-url').val('').removeClass('hasError');
                    $('#get-url-help').html('');
                    $('#generic-dialog').modal('hide');
                    getPploadFiles();
                },
                error: function() {
                    $('#get-url').addClass('hasError').focus();
                    $('#get-url-help').html('An Error occurred. Please check your URL or try again later.');
                }
            });
        });

        $('body').on('change', '#get-url', function(event) {
            $('#get-url-help').empty();
        });

        var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}}

        $('button[rel="tooltip"]').tooltip();

        var $modalPpload = $('#modal-ppload');
        var pploadApiUri = $modalPpload.attr('data-ppload-api-uri');
        var ajaxUploads = {
            queue: {},
            currentUploadId: null,
            uploading: null
        };

        function keysrt(key, asc) {
            if(asc) {
                  return function(a,b){
                   if (a[key] > b[key]) return 1;
                   if (a[key] < b[key]) return -1;
                   return 0;
                  }
            } else {
             return function(a,b){
                       if (a[key] < b[key]) return 1;
                       if (a[key] > b[key]) return -1;
                       return 0;
             }
            }
        }

        function getUpdates(page) {
            $modalPpload.find('#update-list').html('');

            var productId = $modalPpload.attr('data-product-id');
            $.ajax({
                url: '/p/'+productId+'/getupdatesajax/',
                type: 'GET',
                data: {
                    format: 'json',
                    ignore_status_code: 1
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        return;
                    }
                    $modalPpload.find('#update-list').append('<br/><br/><br/>');

                    $.each(data.updates, function () {
                        var id = '';
                        if (this.project_update_id) {
                            id = this.project_update_id;
                        }
                        var title = '';
                        if (this.title) {
                            title = this.title;
                        }
                        var text = '';
                        if (this.text) {
                            text = this.text;
                        }
                        var date = '';
                        if (this.created_at) {
                            date = this.created_at;
                        }


                        var divEl = $('<div />');
                        divEl.attr('data-uptdate-id', id);
                        divEl.append(
                                 '<a name="anker_'+id+'"></a>'
                                + '<h4>'+title+'</h4>'
                                + '<div class="small light lightgrey product-update-date">'+date+ '</div>'
                                + text + '<br/><br/>'
                            );

                        var btnEdit = $('<button type="submit" class="btn btn-native btn-sm">Edit</button>');
                        btnEdit.attr('data-change-update-btn',id);
                        btnEdit.attr('data-change-title',title);
                        btnEdit.attr('data-change-text',text);


                        var btnDelete = $('<button type="submit" class="btn btn-native btn-sm">Delete</button>');
                        btnDelete.attr('data-delete-update-btn',id);

                        divEl.append(btnEdit);
                        divEl.append(btnDelete);
                        divEl.append('<br/><br/><br/><br/>');

                        $modalPpload.find('#update-list').append(divEl);

                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        }

        function getPploadFiles(page) {
            var collectionId = $modalPpload.attr('data-ppload-collection-id');

            if (!page) {
                page = 1;
                $modalPpload.find('table[data-ppload-files] tbody').empty();
            }
            $.ajax({
                url: pploadApiUri + 'files/index',
                type: 'GET',
                data: {
                    collection_id: collectionId,
                    perpage: 1000,
                    page: page,
                    format: 'json',
                    ignore_status_code: 0,
                    status: 'active'
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        return;
                    }
                    var deletePploadFileBtn = '<a href="#" class="btn btn-native btn-xs btn-file-dropzone" data-deletepploadfile-btn=""><span class="glyphicon glyphicon-trash"></span></a>';
                    var deletePploadFileBtnPerFile = '';

                    var myArray = $.map(data.files, function(entry) {
                        return entry;
                    });
                    myArray.sort(keysrt('created_timestamp'), false);

                    //var tagOptions = UserTags.getTagOptions();

                    $.each(myArray, function () {

                        var fileDescription = '';
                        if (this.description) {
                            fileDescription = this.description;
                            fileDescription = fileDescription.replace(/<\/?[^>]+(>|$)/g, "");
                        }

                        var inputFileDescription = '<input data-ppload-file-description="" class="form-control input-sm"'
                            + ' type="text" maxlength="140" placeholder="File description"'
                            + ' value="' + fileDescription + '">';
                        if(this.active == '0') {
                            inputFileDescription = '<input disabled="disabled" data-ppload-file-description="" class="form-control input-sm"'
                                + ' type="text" maxlength="140" placeholder="File description"'
                                + ' value="' + fileDescription + '">';
                        }

                        var versionText;
                        if(this.version==null) {versionText = '';} else{versionText = this.version;}
                        versionText = versionText.replace(/<\/?[^>]+(>|$)/g, "");

                        var version = '<input data-ppload-file-version="" class="form-control input-sm"'
                            + ' type="text" maxlength="140" placeholder="File version"'
                            + ' value="' + versionText + '">';
                        if(this.active == '0') {
                            version = '<input disabled="disabled" data-ppload-file-version="" class="form-control input-sm"'
                                + ' type="text" maxlength="140" placeholder="File version"'
                                + ' value="' + versionText + '">';
                        }

                        var fileCategory = '';
                        if (this.category) {
                            fileCategory = this.category;
                        }
                        var link = '';
                        var fileTags = '';
                        var osId = '';
                        var licensetype = null;
                        var licenseId = '';
                        var license = '';
                        var packagetypeId = '';


                        //var packageId = null;
                        //var archId = null;
                        //var deviceId = null;
                        if (this.tags) {
                            fileTags = this.tags;
                            $.each(fileTags.split(','), function() {
                                if(this.indexOf("##")==-1) {
                                    var tagStr = this.split('-');
                                    if (tagStr.length == 2 && tagStr[0] == 'os') {
                                        osId = tagStr[1];
                                    } else if (tagStr.length == 2 && tagStr[0] == 'licensetype') {
                                        licenseId = tagStr[1];
                                    } else if (tagStr.length == 2 && tagStr[0] == 'packagetypeid') {
                                        packagetypeId = tagStr[1];
                                    }
                                } else {
                                    var tagStr = this.split('##');
                                    if (tagStr.length == 2 && tagStr[0] == 'link') {
                                        link = tagStr[1];
                                    } else if (tagStr.length == 2 && tagStr[0] == 'license') {
                                        license = tagStr[1];
                                        license = Base64.decode(license);
                                    } else if (tagStr.length == 2 && tagStr[0] == 'packagetypeid') {
                                        packagetypeId = tagStr[1];
                                    }
                                }
                            });
                        }

                        //downloadlink is now: domain/api/files/downloadfile/id/ID/s/TOKEN/t/TIMESTAMP/u/USERID/FILE_NAME
                        var hash = '<?= $this->download_hash ?>';
                        var timetamp = '<?= $this->download_timestamp ?>';
                        var userid = '<?= $this->member_id?>';

                        var downloadUrl = pploadApiUri + 'files/downloadfile/id/' + this.id + '/o/1/s/' + hash + '/t/' + timetamp + '/u/' + userid + '/' + this.name;
                        var downloadLinkFilename = link ? this.name + ' (External Link)' : this.name;
                        var downloadLink = '<a href="' + downloadUrl + '" id="data-link' + this.id + '">' + downloadLinkFilename + '</a>';

                        if(this.active == '1') {
                            deletePploadFileBtnPerFile = deletePploadFileBtn;
                        } else {
                            deletePploadFileBtnPerFile = '';
                        }

                        var numDownloads = this.downloaded_count;
                        numDownloads = numDownloads || 0;

                        $modalPpload.find('table[data-ppload-files] tbody').append(
                            '<tr data-ppload-file-id="' + this.id + '" data-ppload-file-category="' + fileCategory + '" data-ppload-file-tags="' + fileTags + '">'
                            + '<td>' + downloadLink + '</td>'
                            + '<td>' + version + '</td>'
                            + '<td>' + inputFileDescription + '</td>'
                            /**
                            + '<td>' + '<select id="data-select-tags' + this.id + '" data-license-id="" name="file_tags[]" class="form-control input-sm chosen" multiple="multiple" style="width: 150px;"><option value=""></option>' + tagOptions + '</select></td>'
                            **/
                            + '<td>'
                            + '<select id="data-select-license' + this.id + '" data-license-id="" name="license" class="form-control input-sm">'
                            + '<option value=\"1000\"></option><option value=\"16\">AGPL</option><option value=\"3\">Artistic 2.0</option><option value=\"6\">BSD</option><option value=\"17\">CC0 1.0 Universal (Public Domain)</option><option value=\"9\">CPL 1.0</option><option value=\"10\">Creative Commons by</option><option value=\"13\">Creative Commons by-nc</option><option value=\"15\">Creative Commons by-nc-nd</option><option value=\"14\">Creative Commons by-nc-sa</option><option value=\"12\">Creative Commons by-nd</option><option value=\"11\">Creative Commons by-sa</option><option value=\"8\">GFDL</option><option value=\"1\">GPLv2 or later</option><option value=\"18\">GPLv2 only</option><option value=\"19\">GPLv3</option><option value=\"2\">LGPL</option><option value=\"0\">Other</option><option value=\"7\">Proprietary License</option><option value=\"5\">QPL</option><option value=\"4\">X11</option>'
                            + '</select><span id="file-tag-license'+this.id+'"><span id="file-tag-license-text'+this.id+'">'
                            + '</td>'
                            + '<td>' + this.type + '</td>'
                            + '<td>'
                            + '<select id="data-select-packagetype' + this.id + '" data-packagetype-id="" name="packagetype" class="form-control input-sm" style="width: 200px;">'
                            + '<option value=\"\"></option>'
                            + '<option value=\"2\">Android (APK)</option>'
                            + '<option value=\"1\">AppImage</option>'
                            + '<option value=\"9\">Arch</option>'
                            + '<option value=\"5\">Debian</option>'
                            + '<option value=\"8\">Electron-Webapp</option>'
                            + '<option value=\"7\">Flatpak</option>'
                            + '<option value=\"10\">open/Suse</option>'
                            + '<option value=\"3\">OS X compatible</option>'
                            + '<option value=\"11\">Redhat</option>'
                            + '<option value=\"6\">Snappy</option>'
                            + '<option value=\"12\">Source Code</option>'
                            + '<option value=\"4\">Windows executable</option>'
                            + '</select>'
                            + '</td>'
                            + '<td>' + this.created_timestamp + '</td>'
                            + '<td style="text-align: right">' + humanFileSize(this.size) + '</td>'
                            + '<td style="text-align: right">' + numDownloads + '</td>'
                            + '<td>' + deletePploadFileBtnPerFile + '</td>'
                            + '</tr>'
                        );

                        $("#data-select-license" + this.id + " option[value='"+licenseId+"']").attr('selected', 'selected');
                        $("#data-select-packagetype" + this.id + " option[value='"+packagetypeId+"']").attr('selected', 'selected');
                        //UserTags.activateSelect(this.id, this.tags);

                        $licenseSelect = $modalPpload.find('#data-select-license' + this.id);
                        if(this.active == '0') {
                            $licenseSelect.prop('disabled', 'disabled');
                        }

                        $packagetypeSelect = $modalPpload.find('#data-select-packagetype' + this.id);
                        if(this.active == '0') {
                            $packagetypeSelect.prop('disabled', 'disabled');
                        }

                        if ((typeof link != 'undefined') && (link != "")) {
                            //$("#data-link" + this.id).attr('href', decodeURIComponent(link));
                            $("#data-link" + this.id).attr('target','_blank');
                            $("#data-link" + this.id).html($("#data-link" + this.id).html() + " (External Link)");
                        }
                    });

                    $modalPpload.find('p[data-file-upload-msg]').show();
                    $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');
                    $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');

                    $modalPpload.find('button[data-deletepploadfiles-btn]').removeAttr('disabled');

                    if ($modalPpload.find('input[data-accept-checkbox]').is(':checked')) {
                        $modalPpload.find('button[data-addpploadfile-btn]').removeAttr('disabled');
                        $modalPpload.find('#github_picker').removeAttr('disabled');
                    } else {
                        $modalPpload.find('button[data-addpploadfile-btn]').attr('disabled', 'disabled');
                        $modalPpload.find('#github_picker').attr('disabled', 'disabled');
                    }

                    if (data.pagination.next) {
                        getPploadFiles(data.pagination.next);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });
        }

        function postPploadFiles(files) {
            if (files) {
                $.each(files, function () {
                    var uploadId = 'file-upload-' + Math.floor(Math.random() * 1000) + '-' + new Date().getTime();
                    ajaxUploads.queue[uploadId] = this;
                    $modalPpload.find('table[data-file-upload] tbody').append(
                        '<tr data-file-upload-id="' + uploadId + '">'
                        + '<td>' + this.name + ' (' + humanFileSize(this.size) + ')</td>'
                        + '<td>'
                        + '<progress max="100" value="0" data-file-upload-progress=""></progress>'
                        + '<br>'
                        + '<span'
                        + ' data-file-upload-progress=""'
                        + ' data-file-upload-loaded="0"'
                        + ' data-file-upload-time="0"></span>'
                        + '</td>'
                        + '<td><a href="#" data-file-upload-cancel-btn="">Ã—</a></td>'
                        + '</tr>'
                    );
                });
            }

            if ($.isEmptyObject(ajaxUploads.queue) || ajaxUploads.uploading) {
                return;
            }

            //var productId = $modalPpload.attr('data-product-id');
            var uploadId = null;
            var formData = new FormData();
            $.each(ajaxUploads.queue, function (key, value) {
                uploadId = key;
                formData.append('file_upload', value);
                return false;
            });
            var $uploadContainer = $modalPpload.find('tr[data-file-upload-id="' + uploadId + '"]');
            var $uploadProgressBar = $uploadContainer.find('progress[data-file-upload-progress]');
            var $uploadProgress = $uploadContainer.find('span[data-file-upload-progress]');
            $uploadProgress.attr('data-file-upload-time', new Date().getTime());

            $modalPpload.find('button[data-deletepploadfiles-btn]').attr('disabled', 'disabled');
            $modalPpload.find('button[data-file-upload-ok-btn]').attr('disabled', 'disabled');
            $modalPpload.find('button[data-file-upload-cancel-btn]').removeAttr('disabled');

            ajaxUploads.currentUploadId = uploadId;

            ajaxUploads.uploading = $.ajax({
                xhr: function () {
                    var xhr = $.ajaxSettings.xhr();
                    if (xhr.upload) {
                        xhr.upload.addEventListener('progress', function (event) {
                            var progress = parseInt(event.loaded / event.total * 10000) / 100;
                            var previousLoaded = parseInt($uploadProgress.attr('data-file-upload-loaded'));
                            var previousTime = parseInt($uploadProgress.attr('data-file-upload-time'));
                            var currentTime = new Date().getTime();
                            var rate = '--';
                            if (previousTime < currentTime) {
                                $uploadProgress.attr('data-file-upload-loaded', event.loaded);
                                $uploadProgress.attr('data-file-upload-time', currentTime);
                                rate = humanFileSize(Math.floor((event.loaded - previousLoaded) / (currentTime - previousTime) * 1000));
                            }
                            $uploadProgressBar.attr('value', progress);
                            $uploadProgress.html(progress + '% | ' + rate + '/s');
                        }, false);
                    }
                    xhr.addEventListener('abort', function (event) {
                        delete ajaxUploads.queue[uploadId];
                        ajaxUploads.currentUploadId = null;
                        ajaxUploads.uploading = null;
                        $uploadContainer.remove();
                        if ($modalPpload.attr('data-ppload-collection-id')) {
                            $modalPpload.find('button[data-deletepploadfiles-btn]').removeAttr('disabled');
                        }
                        $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');
                        $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');
                        postPploadFiles();
                    }, false);
                    return xhr;
                },
                url: $modalPpload.attr('data-addpploadfile-uri'),
                type: 'POST',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }
                    delete ajaxUploads.queue[uploadId];
                    ajaxUploads.currentUploadId = null;
                    ajaxUploads.uploading = null;
                    $uploadContainer.remove();
                    $('a[href="#modal-ppload"][data-product-id="' + $modalPpload.attr('data-product-id') + '"]')
                        .attr('data-ppload-collection-id', data.file.collection_id);
                    $modalPpload.attr('data-ppload-collection-id', data.file.collection_id);
                    var version = '<input data-ppload-file-version="" class="form-control input-sm"'
                        + ' type="text" maxlength="140" placeholder="File version"'
                        + ' value="">';

                    var fileDescription = '';
                    if (data.file.description) {
                        fileDescription = data.file.description;
                    }
                    var fileCategory = '';
                    if (data.file.category) {
                        fileCategory = data.file.category;
                    }
                    var fileTags = '';
                    if (data.file.tags) {
                        fileTags = data.file.tags;
                    }

                    //var tagOptions = UserTags.getTagOptions();

                    $modalPpload.find('table[data-ppload-files] tbody').append(
                        '<tr data-ppload-file-id="' + data.file.id + '" data-ppload-file-category="' + fileCategory + '" data-ppload-file-tags="' + fileTags + '">'
                        + '<td><a href="' + pploadApiUri + 'files/download/id/' + data.file.id + '/' + data.file.name + '">' + data.file.name + '</a></td>'
                        + '<td>' + version + '</td>'
                        + '<td><input data-ppload-file-description="" class="form-control input-sm"'
                        + ' type="text" maxlength="140" placeholder="File description"'
                        + ' value="' + fileDescription + '"></td>'
                        /**
                        + '<td>' + '<select id="data-select-tags' + data.file.id + '" data-tag-id="" name="file_tags[]" class="form-control input-sm chosen" multiple="multiple" style="width: 150px;"><option value=""></option>' + tagOptions + '</select></td>'
                        **/
                        + '<td>'
                        + '<select id="data-select-license' + data.file.id + '" data-license-id="" name="license" class="form-control input-sm">'
                        + '<option value=\"1000\"></option><option value=\"16\">AGPL</option><option value=\"3\">Artistic 2.0</option><option value=\"6\">BSD</option><option value=\"17\">CC0 1.0 Universal (Public Domain)</option><option value=\"9\">CPL 1.0</option><option value=\"10\">Creative Commons by</option><option value=\"13\">Creative Commons by-nc</option><option value=\"15\">Creative Commons by-nc-nd</option><option value=\"14\">Creative Commons by-nc-sa</option><option value=\"12\">Creative Commons by-nd</option><option value=\"11\">Creative Commons by-sa</option><option value=\"8\">GFDL</option><option value=\"1\">GPLv2 or later</option><option value=\"18\">GPLv2 only</option><option value=\"19\">GPLv3</option><option value=\"2\">LGPL</option><option value=\"0\">Other</option><option value=\"7\">Proprietary License</option><option value=\"5\">QPL</option><option value=\"4\">X11</option>'
                        + '</select>'
                        + '</td>'
                        + '<td>' + data.file.type + '</td>'
                        + '<td>'
                        + '<select id="data-select-packagetype' + data.file.id + '" data-packagetype-id="" name="packagetype" class="form-control input-sm" style="width: 200px;">'
                        + '<option value=\"\"></option>'
                        + '<option value=\"2\">Android (APK)</option>'
                        + '<option value=\"1\">AppImage</option>'
                        + '<option value=\"9\">Arch</option>'
                        + '<option value=\"5\">Debian</option>'
                        + '<option value=\"8\">Electron-Webapp</option>'
                        + '<option value=\"7\">Flatpak</option>'
                        + '<option value=\"10\">open/Suse</option>'
                        + '<option value=\"3\">OS X compatible</option>'
                        + '<option value=\"11\">Redhat</option>'
                        + '<option value=\"6\">Snappy</option>'
                        + '<option value=\"12\">Source Code</option>'
                        + '<option value=\"4\">Windows executable</option>'
                        + '</select>'
                        + '</td>'
                        + '<td>' + data.file.created_timestamp + '</td>'
                        + '<td style="text-align: right">' + humanFileSize(data.file.size) + '</td>'
                        + '<td style="text-align: right">0</td>'
                        + '<td><a href="#" class="btn btn-native btn-xs btn-file-dropzone" data-deletepploadfile-btn=""><span class="glyphicon glyphicon-trash"></span></a></td>'
                        + '</tr>'
                    );

                    //UserTags.activateSelect(data.file.id, '');

                    $modalPpload.find('button[data-deletepploadfiles-btn]').removeAttr('disabled');
                    $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');
                    $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');
                    postPploadFiles();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function updatePploadFile(fileId, fileDescription, fileCategory, fileTags) {
            $.ajax({
                url: $modalPpload.attr('data-updatepploadfile-uri'),
                type: 'POST',
                data: {
                    file_id: fileId,
                    file_description: fileDescription,
                    file_category: fileCategory
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function updatePackageType(fileId, packagetypeId) {
            $.ajax({
                url: $modalPpload.attr('data-updatepackagetype-uri'),
                type: 'POST',
                data: {
                    file_id: fileId,
                    package_type_id: packagetypeId
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function updatePploadFileVersion(fileId, version) {
            version = version.replace(/<\/?[^>]+(>|$)/g, "");
            $.ajax({
                url: $modalPpload.attr('data-updatepploadfile-uri'),
                type: 'POST',
                data: {
                    file_id: fileId,
                    file_version: version
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function updatePploadFileTags(fileId, fileTags) {
            $.ajax({
                url: $modalPpload.attr('data-updatepploadfile-uri'),
                type: 'POST',
                data: {
                    file_id: fileId,
                    file_tags: fileTags
                },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function deletePploadFile(fileId) {
            $.ajax({
                url: $modalPpload.attr('data-deletepploadfile-uri'),
                type: 'POST',
                data: {file_id: fileId},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        alert('Error: ' + data.error_text);
                        return;
                    }
                    $modalPpload.find('table[data-ppload-files] tbody').html('');
                    $modalPpload.find('table[data-file-upload] tbody').html('');
                    getPploadFiles();
                    /**
                    $modalPpload.find('tr[data-ppload-file-id="' + fileId + '"]').remove();
                    if ($modalPpload.find('tr[data-ppload-file-id]').size() === 0) {
                        $modalPpload.find('table[data-ppload-files] tbody').html('');
                        $modalPpload.find('table[data-file-upload] tbody').html('');
                        $modalPpload.find('p[data-file-upload-msg]').show();
                        $modalPpload.find('button[data-deletepploadfiles-btn]').attr('disabled', 'disabled');
                        $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');
                        $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');

                        if ($modalPpload.find('input[data-accept-checkbox]').is('checked')) {
                            $modalPpload.find('button[data-addpploadfile-btn]').removeAttr('disabled');
                        } else {
                            $modalPpload.find('button[data-addpploadfile-btn]').attr('disabled', 'disabled');
                        }

                    }
                    **/
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus + ", " + errorThrown);
                    return;
                }
            });
        }

        function deletePploadFiles() {
            $.ajax({
                url: $modalPpload.attr('data-deletepploadfiles-uri'),
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'ok') {
                        return;
                    }
                    $modalPpload.find('table[data-ppload-files] tbody').html('');
                    $modalPpload.find('table[data-file-upload] tbody').html('');
                    $modalPpload.find('p[data-file-upload-msg]').show();

                    //$modalPpload.find('button[data-addpploadfile-btn]').removeAttr('disabled');
                    $modalPpload.find('button[data-deletepploadfiles-btn]').attr('disabled', 'disabled');
                    $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');
                    $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');

                    $modalPpload.find('input[data-accept-checkbox]').removeAttr('disabled');
                    $modalPpload.find('button[data-addpploadfile-btn]').attr('disabled', 'disabled');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });
        }

        function humanFileSize(bytes) {
            var size = '';
            size = (bytes / 1048576).toFixed(2) + ' MB';
            /*
             if (bytes >= 1073741824) {
             size = (bytes / 1073741824).toFixed(2) + 'GB';
             }
             else if (bytes >= 1048576) {
             size = (bytes / 1048576).toFixed(2) + 'MB';
             }
             else if (bytes >= 1024) {
             size = (bytes / 1024).toFixed(2) + 'KB';
             }
             else {
             size = bytes + 'bytes';
             }*/
            return size;
        }

        $('a[href="#modal-ppload"]').on('click', function (event) {
            event.preventDefault();
            $modalPpload.attr('data-ppload-collection-id', $(this).attr('data-ppload-collection-id'));
            $modalPpload.attr('data-product-id', $(this).attr('data-product-id'));
            $modalPpload.attr('data-product-tile', $(this).attr('data-product-title'));
            $modalPpload.attr('data-product-version', $(this).attr('data-product-version'));
            $modalPpload.attr('data-addpploadfile-uri', $(this).attr('data-addpploadfile-uri'));
            $modalPpload.attr('data-updatepploadfile-uri', $(this).attr('data-updatepploadfile-uri'));
            $modalPpload.attr('data-updatepackagetype-uri', $(this).attr('data-updatepackagetype-uri'));
            $modalPpload.attr('data-deletepploadfile-uri', $(this).attr('data-deletepploadfile-uri'));
            $modalPpload.attr('data-deletepploadfiles-uri', $(this).attr('data-deletepploadfiles-uri'));
            $modalPpload.find('div[data-file-upload]').css({
                'min-height': '200px',
                'max-height': '400px',
                'border-width': '5px',
                'border-style': 'dashed',
                'border-color': '#cccccc',
                'overflow': 'inherit'
            });

            $modalPpload.find('h3[data-ppload-label]').html('Files for ' + $modalPpload.attr('data-product-tile'));
            $modalPpload.find('#product-version').val($modalPpload.attr('data-product-version'));

            $modalPpload.find('table[data-ppload-files] tbody').html('');
            $modalPpload.find('table[data-file-upload] tbody').html('');
            $modalPpload.find('p[data-file-upload-msg]').show();

            $modalPpload.find('#update-list').html('');

            $modalPpload.find('input[data-accept-checkbox]').removeAttr('disabled');

            $modalPpload.find('button[data-addpploadfile-btn]').attr('disabled', 'disabled');
            $modalPpload.find('button[data-deletepploadfiles-btn]').attr('disabled', 'disabled');
            $modalPpload.find('button[data-file-upload-ok-btn]').removeAttr('disabled');
            $modalPpload.find('button[data-file-upload-cancel-btn]').attr('disabled', 'disabled');

            if ($modalPpload.attr('data-ppload-collection-id')) {
                getPploadFiles();
            }

            //if ($modalPpload.attr('data-product-id')) {
            //    getUpdates();
            //}

        });

        $modalPpload.on('dragover', 'div[data-file-upload]', function (event) {
            event.preventDefault();
        });

        $modalPpload.on('dragenter', 'div[data-file-upload]', function (event) {
            event.preventDefault();
            $(this).css('border-color', '#00ccff');
        });

        $modalPpload.on('dragleave', 'div[data-file-upload]', function (event) {
            event.preventDefault();
            $(this).css('border-color', '#cccccc');
        });

        $modalPpload.on('drop', 'div[data-file-upload]', function (event) {
            event.preventDefault();
            postPploadFiles(event.originalEvent.dataTransfer.files);
            $(this).css('border-color', '#cccccc');
        });

        $modalPpload.on('change', 'input[data-file-upload]', function (event) {
            postPploadFiles(this.files);
        });

        $modalPpload.on('click', 'button[data-addpploadfile-btn]', function (event) {
            event.preventDefault();
            $modalPpload.find('input[data-file-upload]').click();
        });

        $modalPpload.on('click', 'input[data-accept-checkbox]', function (event) {

            if ($modalPpload.find('input[data-accept-checkbox]').is(':checked')) {

                //event.preventDefault();
                $modalPpload.find('button[data-addpploadfile-btn]').removeAttr('disabled');
                $modalPpload.find('#github_picker').removeAttr('disabled');
            } else {
                //event.preventDefault();
                $modalPpload.find('button[data-addpploadfile-btn]').attr('disabled', 'disabled');
                $modalPpload.find('#github_picker').attr('disabled', 'disabled');
            }
        });

        $modalPpload.on('click', 'tr[data-ppload-file-id] a[data-deletepploadfile-btn]', function (event) {
            event.preventDefault();
            deletePploadFile($(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id'));
        });

        $modalPpload.on('click', 'button[data-deletepploadfiles-btn]', function (event) {
            event.preventDefault();
            deletePploadFiles();
        });

        $modalPpload.on('click', 'button[data-ppload-cancel-btn]', function (event) {
            event.preventDefault();
            $modalPpload.modal('hide');
        });

        $modalPpload.on('click', 'button[data-file-upload-cancel-btn]', function (event) {
            event.preventDefault();
            ajaxUploads.uploading.abort();
            ajaxUploads.queue = {};
            $modalPpload.find('table[data-file-upload] tbody').html('');
        });

        $modalPpload.on('click', 'tr[data-file-upload-id] a[data-file-upload-cancel-btn]', function (event) {
            event.preventDefault();
            var uploadId = $(this).closest('tr[data-file-upload-id]').attr('data-file-upload-id');
            if (uploadId == ajaxUploads.currentUploadId) {
                ajaxUploads.uploading.abort();
            }
            else {
                delete ajaxUploads.queue[uploadId];
                $modalPpload.find('tr[data-file-upload-id="' + uploadId + '"]').remove();
            }
        });

        $modalPpload.on('change', 'input[data-ppload-file-description]', function (event) {
            event.preventDefault();
            var fileId = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id');
            var fileDescription = $(this).closest('input[data-ppload-file-description]').val();
            var fileCategory = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-category');
            var fileTags = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-tags');

            $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-tags', fileTags);
            fileDescription = fileDescription.replace(/<\/?[^>]+(>|$)/g, "");
            updatePploadFile(fileId, fileDescription, fileCategory, fileTags);
        });

        $modalPpload.on('change', 'input[data-ppload-file-version]', function (event) {
            event.preventDefault();
            var fileId = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id');
            var fileVersion = $(this).closest('input[data-ppload-file-version]').val();
            updatePploadFileVersion(fileId, fileVersion);
        });

        $modalPpload.on('click', 'button[data-add-update-btn]', function (event) {
            var product_version = $modalPpload.find('#product-version').val();
            var update_id = $modalPpload.find('#update-id').val();
            var title = $modalPpload.find('#update-title').val();
            var text = $modalPpload.find('#update-text').val();
            var productId = $modalPpload.attr('data-product-id');
            event.preventDefault();

            $.ajax({
                url: '/p/'+productId+'/saveupdateajax',
                type: 'POST',
                data: {title: title, text: text, update_id: update_id, product_version: product_version},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        return;
                    }
                    $modalPpload.find('#update-title').val('');
                    $modalPpload.find('#update-text').val('');
                    $modalPpload.find('#update-id').val('');

                    if(update_id) {
                        getUpdates();
                    } else {
                        $modalPpload.modal('hide');
                        location.reload();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        });


        $modalPpload.on('click', 'button[data-delete-update-btn]', function (event) {
            var updateId = $(this).attr('data-delete-update-btn');
            var productId = $modalPpload.attr('data-product-id');
            event.preventDefault();

            $.ajax({
                url: '/p/'+productId+'/deleteupdateajax',
                type: 'POST',
                data: {update_id: updateId},
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.status != 'success') {
                        alert('Update could not be deleted!');
                        return;
                    }
                    getUpdates();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return;
                }
            });

        });

        $modalPpload.on('click', 'button[data-change-update-btn]', function (event) {
            var updateId = $(this).attr('data-change-update-btn');
            var title = $(this).attr('data-change-title');
            var text = $(this).attr('data-change-text');
            var productId = $modalPpload.attr('data-product-id');

            $modalPpload.find('#update-title').val(title);
            $modalPpload.find('#update-text').val(text);
            $modalPpload.find('#update-id').val(updateId);

            $modalPpload.find('#update-title').focus();

            event.preventDefault();

        });


        /*
        $modalPpload.on('change', 'select.chosen', function (event) {
            event.preventDefault();
            var fileId = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id');
            var currentTags = $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags');
            var chosenTags = $(this).val();

            var newTags = UserTags.removeOldTags(currentTags);
            newTags = UserTags.setNewTags(newTags, chosenTags);

            updatePploadFileTags(fileId, newTags);
            $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags',newTags);
        });
        */

        $modalPpload.on('change', 'select[id*=data-select-license]', function(event) {
            event.preventDefault();
            var fileId = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id');
            var fileTags = $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags');
            var licenseId = $modalPpload.find('#data-select-license' + fileId).val();

            var newFileTags = '';

            if (fileTags) {

                $.each(fileTags.split(','), function () {
                    // skip old entries
                    if ((this.length == 0) || (this.indexOf('licensetype-') == 0) || (this.indexOf('license##') == 0)) {
                        return true;
                    }
                    newFileTags += ',' + this;
                });

            }
            newFileTags += ',licensetype-'+licenseId;
            updatePploadFileTags(fileId, newFileTags);
            $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags',newFileTags);
        });

        $modalPpload.on('change', 'select[id*=data-select-packagetype]', function(event) {
            event.preventDefault();
            var fileId = $(this).closest('tr[data-ppload-file-id]').attr('data-ppload-file-id');
            var fileTags = $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags');
            var packagetypeId = $modalPpload.find('#data-select-packagetype' + fileId).val();

            var newFileTags = '';
            if (fileTags) {

                $.each(fileTags.split(','), function () {
                    // skip old entries
                    if ((this.length == 0) || (this.indexOf('packagetypeid-') == 0) || (this.indexOf('packagetypeid##') == 0)) {
                        return true;
                    }
                    newFileTags += ',' + this;
                });

            }
            newFileTags += ',packagetypeid-'+packagetypeId;
            updatePploadFileTags(fileId, newFileTags);
            $(this).closest('tr[data-ppload-file-tags]').attr('data-ppload-file-tags',newFileTags);
            updatePackageType(fileId, packagetypeId);
        });

        <?php /*
        var UserTags = (function () {
            return {
                removeOldTags : function(stringOldTags) {
                    if (!stringOldTags) {
                        return '';
                    }

                    var stringNewTags = '';
                    $.each(stringOldTags.split(','), function() {
                        if (this.length == 0) {
                            return true;
                        }
                        if (this.indexOf('@@@')==-1) {
                            stringNewTags += ',' + this;
                        }
                    });

                    return stringNewTags;
                },
                setNewTags : function(stringOldTags, arrayNewTags) {
                    if (arrayNewTags.length == 0) {
                        return stringOldTags;
                    }
                    var newTags = '@@@';
                    $.each(arrayNewTags, function() {
                        newTags += this + '@@';
                    });

                    return stringOldTags + ',' + newTags;
                },
                getTagArray : function(stringTags) {
                    if (!stringTags) {
                        return [];
                    }
                    var result;
                    $.each(stringTags.split(','), function() {
                        if (this.indexOf('@@@') == 0) {
                            var strTags = this.substring(3);
                            strTags = strTags.substring(0,strTags.length - 2);
                            result = strTags.split('@@');
                        }
                    });

                    return result;
                },
                getTagOptions: function() {
                    <?php
                    $modelTagGroup = new Default_Model_TagGroup();
                    $groups = $modelTagGroup->fetchGroupHierarchy();
                    $tagOptions = '';
                    foreach($groups as $label => $opt):
                        $tagOptions .= '<optgroup label="'.$label.'">';
                        foreach ($opt as $id => $name):
                            $tagOptions .= '<option value="'.$name.'">'.$name.'</option>';
                        endforeach;
                        $tagOptions .= '</optgroup>';
                    endforeach;
                    ?>
                    return '<?=$tagOptions?>';

                },
                activateSelect: function(elementId, elementTags) {
                    console.log(elementId);
                    console.log(elementTags);
                    var userTagArray = UserTags.getTagArray(elementTags);
                    console.log(userTagArray);
                    $.each(userTagArray, function() {
                        $("#data-select-tags" + elementId + " option[value='"+this+"']").attr('selected', 'selected');
                    });
                    $("#data-select-tags" + elementId).chosen({
                        width: "100%",
                        max_selected_options: "5",
                        disable_search: "false",
                        disable_search_threshold: "5"
                    });
                },
            }
        })();
    */
        ?>

    });

</script>
<script type="text/javascript" src="/theme/flatui/js/lib/chosen.jquery.min.js"></script>
<!-- /ppload -->
