<?php
/**
 *  ocs-webserver
 *
 *  Copyright 2016 by pling GmbH.
 *
 *    This file is part of ocs-webserver.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU Affero General Public License as
 *    published by the Free Software Foundation, either version 3 of the
 *    License, or (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **/
?>
<?php /*
<link href="/theme/react/assets/css/metaheader.css" rel="stylesheet">
<script type="text/javascript" src="/theme/react/lib/react/react.js"></script>
<script type="text/javascript" src="/theme/react/lib/react-dom/react-dom.js"></script>
<div id="metaheader"></div>
<script src="/home/metamenujs?target=opendesktop&url=<?= $this->serverUrl(). $this->url() ?>&v=1.8" ></script>
<script type="text/javascript" src="/theme/react/metaheader.js?v=1.8"></script>
<link href="/theme/react/assets/css/metaheader.css" rel="stylesheet">

// version 2
<opendesktop-metaheader config-target="opendesktop"> </opendesktop-metaheader>
<script src="/theme/react-app/bundle/metaheader-bundle.js?<?= APPLICATION_VERSION ?>"></script>

// version 3 local no ajax
*/
?>



<?php
//Change from opendesktop to pling
$baseurl = Zend_Registry::get('config')->settings->client->default->baseurl;
$baseurlStore = Zend_Registry::get('config')->settings->client->default->baseurl_store;
$searchbaseurl = $this->buildSearchBaseUrl();
$url_forum = Zend_Registry::get('config')->settings->client->default->url_forum;
$url_blog = Zend_Registry::get('config')->settings->client->default->url_blog;
$url_gitlab = Zend_Registry::get('config')->settings->client->default->url_gitlab;
$url_riot = Zend_Registry::get('config')->settings->client->default->url_riot;
$url_myopendesktop = Zend_Registry::get('config')->settings->client->default->url_myopendesktop;
$url_cloudopendesktop = Zend_Registry::get('config')->settings->client->default->url_cloudopendesktop;
$url_musicopendesktop = Zend_Registry::get('config')->settings->client->default->url_musicopendesktop;
$url_mastodon = Zend_Registry::get('config')->settings->client->default->url_mastodon;
$url_docsopendesktop = Zend_Registry::get('config')->settings->client->default->url_docsopendesktop;

$filter = new Local_Filter_Url_Encrypt();
$url_login;
$url_logout;

// intern metaheader diff opendesktop/pling
$storeConfig = Zend_Registry::isRegistered('store_config') ? Zend_Registry::get('store_config') : null;
$target = 'pling';
if($storeConfig->config_id_name=='opendesktop' or $storeConfig->config_id_name=='kde-store')
{
  $target = $storeConfig->config_id_name;
}

if(isset($_GET['target'])) {
    $target = $_GET['target'];
}
$targetObject=array();
$targetObject['target'] = $target;
if($target=="pling")
{
  $targetObject['logo'] = "pling";
  $targetObject['logoLabel'] = "";
  $targetObject['link'] = $baseurlStore;
}else if($target=="kde-store")
{
  $targetObject['logo'] = "kdeStore";
  $targetObject['logoLabel'] = "store.kde.org";
  $targetObject['link'] = 'https://store.kde.org/';
}else {
  $targetObject['logo'] = "opendesktop";
  $targetObject['logoLabel'] = "OpenDesktop";
  $targetObject['link'] = $baseurl;
}


$thisurl = "/";
if(isset($_GET['url'])) {
    $thisurl = $_GET['url'];
}else
{
   $thisurl= Zend_Controller_Front::getInstance()->getRequest()->getScheme() . '://' . Zend_Controller_Front::getInstance()->getRequest()->getHttpHost().$_SERVER["REQUEST_URI"];
}


$url_login = "/login/redirect/".$filter->filter($thisurl);
$url_logout = "/logout?redirect=".$filter->filter($thisurl);
$isExternal = 'var isExternal = false;';
$is_external = false;

$helperUserRole = new Backend_View_Helper_UserRole();
$userRoleName = $helperUserRole->userRole();
$isAdmin = false;
if (Default_Model_DbTable_MemberRole::ROLE_NAME_ADMIN == $userRoleName) {
    $isAdmin = true;
}


$user = null;
$metamenuTheme = '';
if (Zend_Auth::getInstance()->hasIdentity()){
    $identity = Zend_Auth::getInstance()->getStorage()->read();
    $helperImage = new Default_View_Helper_Image();
    $avatar = $helperImage->image($identity->profile_image_url,array('width' => 100, 'height' => 100, 'crop' => 2));
    $isSupporter = $this->isSupporter($identity->member_id);
    $user = array(
        "username" => $identity->username,
        "member_id" => $identity->member_id,
        "mail" => $identity->mail,
        "avatar" => $avatar,
        "roleName" =>$identity->roleName,
        "isSupporter" => $isSupporter
    );

    $settingmodel = new Default_Model_MemberSettingValue();
    $result = $settingmodel->fetchMemberSettingItem($identity->member_id,1);
    if($result && $result['value']==1)
    {
        $metamenuTheme = 'metamenu-theme-dark';
    }


}

$sname = Zend_Registry::get('store_host');
$json_menu = $this->fetchStoresForCatTreeJson();


$response = array(
    "isAdmin" => $isAdmin,
    "isExternal" => $is_external,
    "domains" => Zend_Json::decode($json_menu),
    "user" => $user,
    "baseUrl" => $baseurl,
    "baseUrlStore" => $baseurlStore,
    "searchbaseurl" => $searchbaseurl,
    "blogUrl" => $url_blog,
    "forumUrl" => $url_forum,
    "mastodonUrl" => $url_mastodon,
    "gitlabUrl" => $url_gitlab,
    "myopendesktopUrl" => $url_myopendesktop,
    "cloudopendesktopUrl" => $url_cloudopendesktop,
    "musicopendesktopUrl" => $url_musicopendesktop,
    "docsopendesktopUrl" => $url_docsopendesktop,
    "riotUrl" => $url_riot,
    "loginUrl" => $url_login,
    "logoutUrl" => $url_logout,
    "sName" => $sname,
    "metamenuTheme" => $metamenuTheme,
    "target" => $targetObject,
    "store" => ($storeConfig?$storeConfig->name:null),
    "storeConfig" => array("config_id_name"=>$storeConfig->config_id_name,"name" =>$storeConfig->name),
);

?>

<div id="metaheader"></div>
<script type="text/javascript">
	var config=<?=json_encode($response)?>;
</script>

<script src="/theme/react/bundle/metaheader-local-bundle.js?<?= APPLICATION_VERSION ?>"></script>

